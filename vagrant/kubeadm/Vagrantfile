# -*- mode: ruby -*-
# vi: set ft=ruby :

file_to_disk = "external.vmdk"

Vagrant.configure("2") do |config|
  config.vm.box = 'centos/7'
  config.vm.box_version = "1809.01"
  config.vm.box_check_update = false
  config.ssh.insert_key = false
  config.ssh.private_key_path = [ "/mnt/d/vagrant-home/.vagrant.d/insecure_private_key", "~/.ssh/id_rsa" ]
  config.vm.network "private_network", ip: "10.0.7.100"
  config.vm.hostname = "kubernetes-dev"
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true
  config.vm.synced_folder '.', '/vagrant', disabled: "true"
  config.vm.provider "virtualbox" do |vb|
    # bugfix at https://github.com/hashicorp/vagrant/issues/8604
    vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    vb.memory = "16384"
    vb.cpus = "4"
    unless File.exist?(file_to_disk)
      vb.customize [ 'createmedium', 'disk', '--filename', file_to_disk, '--size', 500 * 1024, '--format', 'VMDK' ]
    end
    vb.customize [ 'storageattach', :id, '--storagectl', 'IDE', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', file_to_disk ]
  end
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/home/vagrant/.ssh/vagrant.pub"
  config.vm.provision "shell", inline: <<-SHELL
	#!/usr/bin/env bash
	set -ex

	# add storage
	parted /dev/sdb mklabel gpt
	parted /dev/sdb mkpart primary 1 500G
	mkfs.xfs /dev/sdb1
	mount /dev/sdb1 /srv
	echo "/dev/sdb1 /srv  xfs defaults 0 0" > /etc/fstab

	# ssh public key insert to authorized_keys
	cat /home/vagrant/.ssh/vagrant.pub > /home/vagrant/.ssh/authorized_keys

	# replace yum repo to mirrors.aliyun.com
	curl -Lo /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
	curl -Lo /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
	
	# disable NetworkManager
	echo -e "[main]\ndns=none" > /etc/NetworkManager/conf.d/dns.conf
	systemctl restart NetworkManager

	echo "nameserver 114.114.114.114" > /etc/resolv.conf

	# disable selinux
	sed  -i 's@^SELINUX=.*@SELINUX=disabled@g' /etc/selinux/config

	# common soft
	yum -y install vim python-pip htop wget pv git htop iotop httpd-tools mariadb tree iotop iftop bash-completion zip unzip software-properties-common lrzsz bind-utils lftp net-tools dos2unix curl nginx

	# install docker
	cat > /etc/sysctl.d/kubernetes.conf <<-EOF
	net.ipv4.ip_forward=1
	net.bridge.bridge-nf-call-ip6tables = 1
	net.bridge.bridge-nf-call-iptables = 1
	EOF
	sysctl --system
	curl -Lo /etc/yum.repos.d/docker-ce.repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
	sed  -i 's@download-stage.docker.com@mirrors.aliyun.com/docker-ce@g' /etc/yum.repos.d/docker-ce.repo
	yum -y install docker-ce-18.06.1.ce
	mkdir -p /etc/docker/
	cat > /etc/docker/daemon.json <<-EOF
	{
	  "exec-opts": ["native.cgroupdriver=systemd"],
	  "registry-mirrors": ["https://fz5yth0r.mirror.aliyuncs.com"],
	  "log-driver": "json-file",
	  "log-opts": {
	    "max-size": "100m",
	    "max-file": "3"
	  },
	  "storage-driver": "overlay2",
	  "storage-opts": [
	    "overlay2.override_kernel_check=true"
	  ]
	}
	EOF
	mkdir -p /etc/systemd/system/docker.service.d
	usermod -aG docker vagrant
	systemctl daemon-reload
	systemctl restart docker
        systemctl enable docker

	# install kubeadm kubectl and kubelet
	cat > /etc/yum.repos.d/kubernetes.repo <<-EOF
	[kubernetes]
	name=Kubernetes
	baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
	enabled=1
	gpgcheck=1
	repo_gpgcheck=1
	gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
	EOF
	setenforce 0
	# yum --showduplicates list <package>
	yum install -y kubelet-1.12.2 kubeadm-1.12.2 kubectl-1.12.2
        sed -i 's@KUBELET_EXTRA_ARGS=.*@KUBELET_EXTRA_ARGS="--pod-infra-container-image=kuops/pause:3.1"@g' /etc/sysconfig/kubelet
        systemctl daemon-reload
	systemctl enable kubelet && systemctl start kubelet
	
	# disable swap partition
	swapoff -a
	sed -i '/swap/d' /etc/fstab

	# kubeadm pulling  images
	curl -Lo /tmp/config.yaml https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/init-config/config.yaml
	kubeadm config images pull --config /tmp/config.yaml

	if ! kubectl get node &> /dev/null ;then
	  # kubeadm init
	  kubeadm init --config /tmp/config.yaml

	  # set kubectl config
	  mkdir -p ~vagrant/.kube
	  cp -i /etc/kubernetes/admin.conf ~vagrant/.kube/config
	  chown vagrant:vagrant ~vagrant/.kube/config
	  mkdir -p ~/.kube
	  cp -i /etc/kubernetes/admin.conf ~/.kube/config
	  chown root:root ~/.kube/config

	  # taint the master node
	  kubectl taint nodes --all node-role.kubernetes.io/master-

	  # kube network use flannel
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/flannel/kube-flannel.yml

	  # bash completion
	  echo "source <(kubectl completion bash)" >> /etc/profile.d/kubernetes-kubectl.sh
	  source /etc/profile.d/kubernetes-kubectl.sh

	  # install helm 来墙我呀
	  docker pull lachlanevenson/k8s-helm:v2.11.0
	  docker run --name helm -dit --rm --entrypoint /bin/cat lachlanevenson/k8s-helm:v2.11.0
	  docker cp helm:/usr/local/bin/helm /usr/local/bin/helm
	  docker rm -f helm
	  docker rmi lachlanevenson/k8s-helm:v2.11.0

	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/helm/tiller-rbac.yaml
	  /usr/local/bin/helm init --upgrade --service-account tiller \
	  --skip-refresh -i kuops/tiller:v2.11.0 \
	  --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts
	  /usr/local/bin/helm repo update 

	  # helm completion
	  echo "source <(/usr/local/bin/helm completion bash)" >> /etc/profile.d/kubernetes-helm.sh
	  source /etc/profile.d/kubernetes-helm.sh

	  # coredns configmap fix loop plugins bug
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/coredns/coredns-configmap.yaml

	  # local storage class
	  kubectl label nodes kubernetes-dev nfs-node=true
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/storageclass/deployment.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/storageclass/class.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/storageclass/rbac.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/storageclass/claim.yaml
          
          # external nginx
          curl -SLo /etc/nginx/nginx.conf https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/external-nginx/nginx.conf
          systemctl restart nginx
          systemctl enable nginx

	  # prometheus
	  git clone https://github.com/kuops/Scripts.git
	  kubectl apply -f Scripts/vagrant/kubeadm/kube-prometheus/manifests

	  # install efk to logging
	  kubectl label nodes kubernetes-dev beta.kubernetes.io/fluentd-ds-ready=true
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/efk/es-service.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/efk/es-statefulset.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/efk/fluentd-es-configmap.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/efk/fluentd-es-ds.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/efk/kibana-deployment.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/efk/kibana-service.yaml

	  # install kubernetes dashboard
	  mkdir /home/vagrant/certs
	  openssl req -nodes -newkey rsa:2048 -keyout /home/vagrant/certs/dashboard.key -out /home/vagrant/certs/dashboard.csr -subj "/CN=kubernetes-dashboard"
	  openssl x509 -req -sha256 -days 36500 -in /home/vagrant/certs/dashboard.csr -signkey /home/vagrant/certs/dashboard.key -out /home/vagrant/certs/dashboard.crt
	  kubectl create secret generic kubernetes-dashboard-certs --from-file=certs/ -n kube-system
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/dashboard/kubernetes-dashboard.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/dashboard/admin-user.yaml

	  # nginx ingress
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/nginx-ingress/mandatory.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/nginx-ingress/service-nodeport.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/nginx-ingress/dashboard-ingress.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/nginx-ingress/kibana-ingress.yaml
	  kubectl apply -f https://raw.githubusercontent.com/kuops/Scripts/master/vagrant/kubeadm/nginx-ingress/prometheus-ingress.yaml
	fi
  SHELL
end
